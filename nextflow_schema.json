{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "User",
    "description": "A simple schema for testing",
    "type": "object",
    "$defs": {
      "input_output_options": {
        "title": "Input/output options",
        "type": "object",
        "description": "Define where the pipeline should find input data and save output data.",
        "properties": {
          "nested_option": {
            "type": "object",
            "description": "Nested parameters inside input/output options.",
            "properties": {
              "deep": {
                "type": "string",
                "description": "A deep nested string parameter."
              },
              "another_deep_option": {
                "type": "integer",
                "description": "Another deep nested parameter."
              }
            },
            "required": ["deep"]
          },
          "allOf_input1": {
            "type": "string"
          },
          "allOf_input2": {
            "type": "string"
          },
          "anyOf_input1": {
            "type": "string"
          },
          "anyOf_input2": {
            "type": "string"
          },
          "oneOf_input1": {
            "type": "string"
          },
          "oneOf_input2": {
            "type": "string"
          },
          "if_input": {
            "type": "string"
          },
          "then_input": {
            "type": "string"
          },
          "else_input": {
            "type": "string"
          },
          "dependentSchemas_input": {
            "type": "string"
          },
          "dependentSchemas_input2": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "required": [
              "allOf_input1"
            ]
          },
          {
            "required": [
              "allOf_input2"
            ]
          }
        ],
        "anyOf": [
          {
            "required": [
              "anyOf_input1"
            ]
          },
          {
            "required": [
              "anyOf_input2"
            ]
          }
        ],
        "oneOf": [
          {
            "required": [
              "oneOf_input1"
            ]
          },
          {
            "required": [
              "oneOf_input2"
            ]
          }
        ],
        "if": {
          "properties": {
            "if_input": {
              "pattern": "data"
            }
          }
        },
        "then": {
          "required": [
            "then_input"
          ]
        },
        "else": {
          "required": [
            "else_input"
          ]
        },
        "dependentSchemas": {
          "dependentSchemas_input": {
            "properties": {
              "dependentSchemas_input2": {
                "type": "string"
              }
            },
            "required": ["dependentSchemas_input2"]
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/$defs/input_output_options"
      }
    ]
  }
